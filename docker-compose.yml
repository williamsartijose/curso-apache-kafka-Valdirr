version: '3.8'  # Define a versão do Docker Compose que estamos usando.



services:  # Define os serviços que serão executados no Docker Compose.
  zookeeper:  # Nome do serviço Zookeeper.
    image: confluentinc/cp-zookeeper:latest  # Imagem Docker do Zookeeper a ser usada.
    networks:
      - broker-kafka  # Conecta o Zookeeper à rede definida abaixo.
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181  # Porta de comunicação do cliente Zookeeper.
      ZOOKEEPER_TICK_TIME: 2000  # Tempo (em milissegundos) entre ticks do Zookeeper.

  kafka:  # Nome do serviço Kafka.
    image: confluentinc/cp-kafka:latest  # Imagem Docker do Kafka a ser usada.
    networks:
      - broker-kafka  # Conecta o Kafka à rede definida abaixo.
    depends_on:  # Define que o Kafka deve iniciar após o Zookeeper estar disponível.
      - zookeeper
    ports:
      - "9092:9092"  # Mapeia a porta 9092 do contêiner Kafka para a porta 9092 do host.
    environment:
      KAFKA_BROKER_ID: 1  # ID único para o broker Kafka.
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181  # Endereço do Zookeeper para o Kafka se conectar.
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092  # Endereços para os quais o Kafka deve anunciar seus listeners.
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT  # Mapeia os protocolos de segurança dos listeners.
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT  # Nome do listener usado para comunicação entre brokers.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Fator de replicação dos tópicos de offsets.

  kafdrop:  # Nome do serviço Kafdrop, uma interface web para Kafka.
    image: obsidiandynamics/kafdrop:latest  # Imagem Docker do Kafdrop a ser usada.
    networks:
      - broker-kafka  # Conecta o Kafdrop à rede definida abaixo.
    depends_on:  # Define que o Kafdrop deve iniciar após o Kafka estar disponível.
      - kafka
    ports:
      - "19000:9000"  # Mapeia a porta 9000 do contêiner Kafdrop para a porta 19000 do host.
    environment:
      KAFKA_BROKERCONNECT: kafka:29092  # Endereço do Kafka para o Kafdrop se conectar.

  payment:  # Nome do serviço Payment.
    image: williamsartijose182/payment:1.0.1  # Imagem Docker do serviço Payment a ser usada.
    networks:
      - broker-kafka  # Conecta o Payment à rede definida abaixo.
    depends_on:  # Define que o Payment deve iniciar após o Kafka estar disponível.
      - kafka
    ports:
      - "8000:8000"  # Mapeia a porta 8000 do contêiner Payment para a porta 8000 do host.
    environment:
      KAFKA_HOST: kafka:29092  # Endereço do Kafka para o Payment se conectar.

  consumer:  # Nome do serviço Consumer.
    image: williamsartijose182/json-consumer:1.0.1  # Imagem Docker do serviço Consumer a ser usada.
    networks:
      - broker-kafka  # Conecta o Consumer à rede definida abaixo.
    depends_on:  # Define que o Consumer deve iniciar após o Kafka e Payment estarem disponíveis.
      - kafka
      - payment
    environment:
      KAFKA_HOST: kafka:29092  # Endereço do Kafka para o Consumer se conectar.

networks:  # Define as redes que serão usadas pelos serviços.
  broker-kafka:  # Nome da rede.
    driver: bridge  # Tipo de driver da rede, neste caso, a rede bridge padrão do Docker.
